// Code generated by protoc-gen-go. DO NOT EDIT.
// source: P2PService.proto

package P2PService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckRequest struct {
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_867a672a018cad66, []int{0}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CheckRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type CheckReply struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckReply) Reset()         { *m = CheckReply{} }
func (m *CheckReply) String() string { return proto.CompactTextString(m) }
func (*CheckReply) ProtoMessage()    {}
func (*CheckReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_867a672a018cad66, []int{1}
}

func (m *CheckReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReply.Unmarshal(m, b)
}
func (m *CheckReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReply.Marshal(b, m, deterministic)
}
func (m *CheckReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReply.Merge(m, src)
}
func (m *CheckReply) XXX_Size() int {
	return xxx_messageInfo_CheckReply.Size(m)
}
func (m *CheckReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReply proto.InternalMessageInfo

func (m *CheckReply) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ServerRequest struct {
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerRequest) Reset()         { *m = ServerRequest{} }
func (m *ServerRequest) String() string { return proto.CompactTextString(m) }
func (*ServerRequest) ProtoMessage()    {}
func (*ServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_867a672a018cad66, []int{2}
}

func (m *ServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerRequest.Unmarshal(m, b)
}
func (m *ServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerRequest.Marshal(b, m, deterministic)
}
func (m *ServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerRequest.Merge(m, src)
}
func (m *ServerRequest) XXX_Size() int {
	return xxx_messageInfo_ServerRequest.Size(m)
}
func (m *ServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerRequest proto.InternalMessageInfo

func (m *ServerRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ServerRequestReply struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerRequestReply) Reset()         { *m = ServerRequestReply{} }
func (m *ServerRequestReply) String() string { return proto.CompactTextString(m) }
func (*ServerRequestReply) ProtoMessage()    {}
func (*ServerRequestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_867a672a018cad66, []int{3}
}

func (m *ServerRequestReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerRequestReply.Unmarshal(m, b)
}
func (m *ServerRequestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerRequestReply.Marshal(b, m, deterministic)
}
func (m *ServerRequestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerRequestReply.Merge(m, src)
}
func (m *ServerRequestReply) XXX_Size() int {
	return xxx_messageInfo_ServerRequestReply.Size(m)
}
func (m *ServerRequestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerRequestReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServerRequestReply proto.InternalMessageInfo

func (m *ServerRequestReply) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type SecondCheckRequest struct {
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecondCheckRequest) Reset()         { *m = SecondCheckRequest{} }
func (m *SecondCheckRequest) String() string { return proto.CompactTextString(m) }
func (*SecondCheckRequest) ProtoMessage()    {}
func (*SecondCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_867a672a018cad66, []int{4}
}

func (m *SecondCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecondCheckRequest.Unmarshal(m, b)
}
func (m *SecondCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecondCheckRequest.Marshal(b, m, deterministic)
}
func (m *SecondCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecondCheckRequest.Merge(m, src)
}
func (m *SecondCheckRequest) XXX_Size() int {
	return xxx_messageInfo_SecondCheckRequest.Size(m)
}
func (m *SecondCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SecondCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SecondCheckRequest proto.InternalMessageInfo

func (m *SecondCheckRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type SecondCheckReply struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecondCheckReply) Reset()         { *m = SecondCheckReply{} }
func (m *SecondCheckReply) String() string { return proto.CompactTextString(m) }
func (*SecondCheckReply) ProtoMessage()    {}
func (*SecondCheckReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_867a672a018cad66, []int{5}
}

func (m *SecondCheckReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecondCheckReply.Unmarshal(m, b)
}
func (m *SecondCheckReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecondCheckReply.Marshal(b, m, deterministic)
}
func (m *SecondCheckReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecondCheckReply.Merge(m, src)
}
func (m *SecondCheckReply) XXX_Size() int {
	return xxx_messageInfo_SecondCheckReply.Size(m)
}
func (m *SecondCheckReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SecondCheckReply.DiscardUnknown(m)
}

var xxx_messageInfo_SecondCheckReply proto.InternalMessageInfo

func (m *SecondCheckReply) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckRequest)(nil), "P2PService.CheckRequest")
	proto.RegisterType((*CheckReply)(nil), "P2PService.CheckReply")
	proto.RegisterType((*ServerRequest)(nil), "P2PService.ServerRequest")
	proto.RegisterType((*ServerRequestReply)(nil), "P2PService.ServerRequestReply")
	proto.RegisterType((*SecondCheckRequest)(nil), "P2PService.SecondCheckRequest")
	proto.RegisterType((*SecondCheckReply)(nil), "P2PService.SecondCheckReply")
}

func init() { proto.RegisterFile("P2PService.proto", fileDescriptor_867a672a018cad66) }

var fileDescriptor_867a672a018cad66 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x08, 0x30, 0x0a, 0x08,
	0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0x39, 0x70, 0xf1, 0x38, 0x67, 0xa4, 0x26, 0x67, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97,
	0x08, 0x49, 0x70, 0xb1, 0x27, 0xa6, 0xa4, 0x14, 0xa5, 0x16, 0x17, 0x4b, 0x30, 0x2b, 0x30, 0x6a,
	0x70, 0x06, 0xc1, 0xb8, 0x42, 0x62, 0x5c, 0x6c, 0x25, 0x89, 0x45, 0xe9, 0xa9, 0x25, 0x12, 0x4c,
	0x60, 0x09, 0x28, 0x4f, 0x49, 0x81, 0x8b, 0x0b, 0x6a, 0x42, 0x41, 0x4e, 0xa5, 0x90, 0x10, 0x17,
	0x0b, 0x48, 0x83, 0x04, 0x23, 0x58, 0x0d, 0x98, 0xad, 0xa4, 0xc9, 0xc5, 0x0b, 0xb2, 0x2e, 0xb5,
	0x88, 0xa0, 0x25, 0x4a, 0x1a, 0x5c, 0x42, 0x28, 0x4a, 0x71, 0x1b, 0xaa, 0x06, 0x52, 0x99, 0x9c,
	0x9f, 0x97, 0x82, 0xe2, 0x7c, 0x01, 0x2e, 0xe6, 0xd2, 0xa2, 0x1c, 0xa8, 0xa9, 0x20, 0xa6, 0x92,
	0x1a, 0x97, 0x00, 0x8a, 0x3a, 0x1c, 0xe6, 0x19, 0x7d, 0x66, 0xe4, 0x42, 0x0a, 0x17, 0x21, 0x27,
	0x68, 0xb8, 0x38, 0xe7, 0x64, 0xa6, 0xe6, 0x95, 0x14, 0x0b, 0x49, 0xe8, 0x21, 0x05, 0x23, 0xb2,
	0x95, 0x52, 0x62, 0x58, 0x64, 0x0a, 0x72, 0x2a, 0x95, 0x18, 0x84, 0x7c, 0xb8, 0x78, 0xdd, 0x53,
	0x4b, 0x20, 0xfe, 0x71, 0x4c, 0x49, 0x29, 0x12, 0x92, 0x44, 0x56, 0x8a, 0xe2, 0x4f, 0x29, 0x39,
	0x9c, 0x52, 0x30, 0xd3, 0x82, 0xb9, 0x04, 0x91, 0x3c, 0x02, 0x71, 0x97, 0x10, 0x9a, 0x36, 0xf4,
	0xf0, 0x90, 0x92, 0xc1, 0x29, 0x0f, 0x36, 0x34, 0x89, 0x0d, 0x9c, 0x22, 0x8c, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xf7, 0x59, 0x30, 0xf8, 0x25, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// P2PServiceClient is the client API for P2PService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type P2PServiceClient interface {
	CheckClients(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckReply, error)
	GetServerAddr(ctx context.Context, in *ServerRequest, opts ...grpc.CallOption) (*ServerRequestReply, error)
	SecondCheckClient(ctx context.Context, in *SecondCheckRequest, opts ...grpc.CallOption) (*SecondCheckReply, error)
}

type p2PServiceClient struct {
	cc *grpc.ClientConn
}

func NewP2PServiceClient(cc *grpc.ClientConn) P2PServiceClient {
	return &p2PServiceClient{cc}
}

func (c *p2PServiceClient) CheckClients(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckReply, error) {
	out := new(CheckReply)
	err := c.cc.Invoke(ctx, "/P2PService.P2PService/CheckClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p2PServiceClient) GetServerAddr(ctx context.Context, in *ServerRequest, opts ...grpc.CallOption) (*ServerRequestReply, error) {
	out := new(ServerRequestReply)
	err := c.cc.Invoke(ctx, "/P2PService.P2PService/GetServerAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p2PServiceClient) SecondCheckClient(ctx context.Context, in *SecondCheckRequest, opts ...grpc.CallOption) (*SecondCheckReply, error) {
	out := new(SecondCheckReply)
	err := c.cc.Invoke(ctx, "/P2PService.P2PService/SecondCheckClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// P2PServiceServer is the server API for P2PService service.
type P2PServiceServer interface {
	CheckClients(context.Context, *CheckRequest) (*CheckReply, error)
	GetServerAddr(context.Context, *ServerRequest) (*ServerRequestReply, error)
	SecondCheckClient(context.Context, *SecondCheckRequest) (*SecondCheckReply, error)
}

// UnimplementedP2PServiceServer can be embedded to have forward compatible implementations.
type UnimplementedP2PServiceServer struct {
}

func (*UnimplementedP2PServiceServer) CheckClients(ctx context.Context, req *CheckRequest) (*CheckReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckClients not implemented")
}
func (*UnimplementedP2PServiceServer) GetServerAddr(ctx context.Context, req *ServerRequest) (*ServerRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerAddr not implemented")
}
func (*UnimplementedP2PServiceServer) SecondCheckClient(ctx context.Context, req *SecondCheckRequest) (*SecondCheckReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SecondCheckClient not implemented")
}

func RegisterP2PServiceServer(s *grpc.Server, srv P2PServiceServer) {
	s.RegisterService(&_P2PService_serviceDesc, srv)
}

func _P2PService_CheckClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P2PServiceServer).CheckClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/P2PService.P2PService/CheckClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P2PServiceServer).CheckClients(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P2PService_GetServerAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P2PServiceServer).GetServerAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/P2PService.P2PService/GetServerAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P2PServiceServer).GetServerAddr(ctx, req.(*ServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P2PService_SecondCheckClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecondCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P2PServiceServer).SecondCheckClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/P2PService.P2PService/SecondCheckClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P2PServiceServer).SecondCheckClient(ctx, req.(*SecondCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _P2PService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "P2PService.P2PService",
	HandlerType: (*P2PServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckClients",
			Handler:    _P2PService_CheckClients_Handler,
		},
		{
			MethodName: "GetServerAddr",
			Handler:    _P2PService_GetServerAddr_Handler,
		},
		{
			MethodName: "SecondCheckClient",
			Handler:    _P2PService_SecondCheckClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "P2PService.proto",
}
